{"version":3,"sourceRoot":"","sources":["QuoteBlock.scss","../../../../node_modules/pattern-library/core/pattern-library/layout.scss"],"names":[],"mappings":";AAEA;EACI;EACA;;AAEA;EACI;EACA;EACA;EACA;EACA;EACA;;AAGJ;EACI;EACA;;AAEA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;AAIN;EACI;;AAEJ;EAII;;AAHA;EACI;;ACpBV;EDhBJ;IA2CQ;;EAEA;IACI;;EAEJ;IACI;IACA","file":"QuoteBlock.css","sourcesContent":["@import 'pattern-library/core/pattern-library/headers';\n\n.flex-page.page div.content-block-quote {\n    margin: ($normal-margin * 2) 0;\n    overflow: auto hidden;\n\n    > img {\n        float: left;\n        padding: 3rem;\n        border-radius: 50%;\n        width: 30rem;\n        max-width: 100%;\n        height: auto;\n    }\n\n    > .content-block-rich-text {\n        margin-top: 5rem;\n        overflow: visible;\n\n        &:before {\n            color: os-color(orange);\n            content: 'â€œ';\n            font-size: 6rem;\n            font-weight: bold;\n            position: relative;\n            top: 0.5rem;\n            left: -4rem;\n            display: block;\n            height: 0;\n            text-align: left;\n        }\n    }\n    > .quotee {\n      .name {\n          font-weight: bold;\n      }\n      .title {\n          &:before {\n              content: ' ';\n          }\n          font-style: italic;\n      }\n    }\n\n    @include width-up-to($tablet-max) {\n        text-align: center;\n\n        > img {\n            float: none;\n        }\n        .content-block-rich-text {\n            margin-top: 0;\n            padding: 0 5rem;\n        }\n    }\n}\n","$normal-margin: 1.5rem;\n$tight-margin: 0.5rem;\n$content-max: 120rem;\n$text-content-max: 80rem;\n$form-element-height: 5rem;\n\n// Per https://zellwk.com/blog/media-query-units/\n// In media queries, only em units handle consistently across browsers.\n// Safari/iOS behaves differently from others when using rem or px and scaled fonts\n// We want the numbers to be in 10-pixel ems, so scale them\n$scale-factor: 10 / 16;\n$wide-screen-min: 140em * $scale-factor;\n$media-content-max: 120em * $scale-factor;\n$phone-max: 60em * $scale-factor;\n$tablet-max: 96em * $scale-factor;\n\n// Includes the given (min) width\n@mixin width-up-to($width) {\n    @media (max-width: $width) {\n        @content;\n    }\n}\n\n$one-pixel-in-em: 1em * $scale-factor * 0.1;\n\n// Excludes the given (max) width\n@mixin wider-than($width) {\n    @media (min-width: $width + $one-pixel-in-em) {\n        @content;\n    }\n}\n\n// Includes the max width, excludes the min width\n@mixin width-between($width1, $width2) {\n    @media (min-width: $width1 + $one-pixel-in-em) and (max-width: $width2) {\n        @content;\n    }\n}\n\n@mixin layout-container($max-width) {\n    box-sizing: border-box;\n    margin-left: auto;\n    margin-right: auto;\n    max-width: $max-width;\n    padding-left: $normal-margin;\n    padding-right: $normal-margin;\n    width: 100%;\n}\n\n// %content and %text-content should be used via @extend because of the nesting\n// rule, so there is no mixin\n%content {\n    @include layout-container($content-max);\n\n    %content {\n        padding: 0;\n    }\n}\n\n%text-content {\n    @include layout-container($text-content-max);\n\n    %content,\n    %text-content {\n        padding: 0;\n    }\n}\n\n// .basis-# defines a cell in the row\n// At phone size, all are 100% width\n// At tablet, .basis-2 thru .basis-6 are 50%, others still 100%\n// At desktop, .basis-n is n/12 of the row\n@mixin bases($prefix) {\n    @for $b from 2 through 12 {\n        #{$prefix}#{$b} {\n            grid-column: auto / span 1;\n            margin: 0;\n\n            @if ($b > 6) {\n                @include width-between($phone-max, $tablet-max) {\n                    grid-column: auto / span 2;\n                }\n            }\n\n            @include wider-than($tablet-max) {\n                grid-column: auto / span $b;\n            }\n        }\n    }\n}\n\n@mixin grid() {\n    display: grid;\n    grid-gap: 1rem 3rem;\n    grid-template-columns: 1fr;\n\n    @include width-between($phone-max, $tablet-max) {\n        grid-template-columns: repeat(2, 1fr);\n    }\n\n    @include wider-than($tablet-max) {\n        grid-template-columns: repeat(12, 1fr);\n    }\n\n    > * {\n        grid-column: 1 / 1;\n\n        @include width-between($phone-max, $tablet-max) {\n            grid-column-end: 3;\n        }\n\n        @include wider-than($tablet-max) {\n            grid-column-end: 13;\n        }\n    }\n}\n\n@mixin form() {\n    @include layout-container($text-content-max);\n    @include grid();\n\n    background-color: ui-color(form-bg);\n    grid-auto-rows: min-content;\n    grid-gap: 5rem 1rem;\n    padding: 4rem;\n\n    @include width-up-to($phone-max) {\n        padding-left: 0;\n        padding-right: 0;\n    }\n}\n\n@mixin tight-row() {\n    display: grid;\n    grid-gap: 1rem;\n    grid-template-columns: 1fr;\n\n    @include width-between($phone-max, $tablet-max) {\n        grid-template-columns: 1fr 1fr;\n    }\n\n    @include wider-than($tablet-max) {\n        grid-template-columns: repeat(auto-fill, minmax(10rem, auto));\n    }\n}\n\n%tight-row {\n    @include tight-row();\n}\n\n%form {\n    @include form();\n}\n\n// A container that centers content horizontally and vertically\n@mixin center() {\n    align-items: center;\n    display: flex;\n    justify-content: center;\n    text-align: center;\n}\n\n// A rounded-cornered container with a drop shadow\n$card-shadow: 0 2px 6px 0 rgba(ui-color(black), 0.25);\n$card-shadow-hover: 0 8px 20px 0 rgba(ui-color(black), 0.25);\n@mixin card() {\n    border: 0;\n    border-radius: 0.4rem;\n    box-shadow: $card-shadow;\n\n    @include wider-than($tablet-max) {\n        &:hover {\n            box-shadow: $card-shadow-hover;\n        }\n    }\n}\n\n%card {\n    @include card();\n}\n\n// The main menu for desktop\n$menu-highlight-border-width: 0.5rem;\n$menu-highlight-border: $menu-highlight-border-width solid os-color(green);\n%main-menu {\n    box-shadow: 0 0.1rem 0.3rem 0.2rem rgba(os-color(gray), 0.1);\n    height: 5.2rem;\n    width: 100%;\n\n    %content {\n        align-items: flex-start;\n        display: flex;\n        justify-content: space-between;\n    }\n\n    %logo-wrapper {\n        @include set-font(helper-label);\n\n        align-items: center;\n        display: grid;\n        grid-column-gap: 1rem;\n        grid-template-columns: min-content auto;\n        padding: 1.2rem 0.1rem;\n    }\n\n    %logo {\n        height: 2.8rem;\n\n        a {\n            height:100%;\n\n            &:active,\n            &:focus,\n            &:hover {\n                &::after {\n                    background-color: transparent;\n                    box-shadow: none;\n                }\n            }\n        }\n\n        img {\n            height: 100%;\n        }\n\n        %logo-color {\n            display: inline-block;\n        }\n    }\n\n    %nav-menu {\n        @include set-font(h4);\n\n        align-items: baseline;\n        display: flex;\n        flex-flow: row nowrap;\n        height: auto;\n        justify-content: flex-end;\n        list-style-type: none;\n        margin: 0;\n        overflow: visible;\n        padding: 0;\n\n        a {\n            text-decoration: none;\n        }\n\n        %nav-menu-item {\n            margin: $menu-highlight-border-width 1rem;\n            padding: 0 0.25rem;\n            white-space: nowrap;\n\n            &:not(%dropdown) > a {\n                color: os-color(gray);\n                display: inline-block;\n                padding: 1.2rem 0 0.6rem;\n\n                @at-root .transparent#{&} {\n                    color: text-color(white);\n                }\n\n                .chevron {\n                    fill: os-color(gray);\n                    height: 1.33rem;\n                    margin-left: 1rem;\n                    transform-origin: center;\n                    transform: rotate(90deg);\n                    width: 0.8rem;\n                }\n            }\n\n            %dropdown-menu {\n                @include set-font(body-regular);\n\n                display: none;\n\n                // inline-block allows width control\n                &[aria-expanded=\"true\"] {\n                    background-color: ui-color(white);\n                    border-top: $menu-highlight-border;\n                    box-shadow: 0 0.5rem 0.5rem 0 rgba(black, 0.1);\n                    color: os-color(gray);\n                    display: block;\n                    height: auto;\n                    opacity: 1;\n                    padding: 1rem 0;\n                    transition: opacity 0.3s;\n                    width: auto;\n                }\n\n                a {\n                    color: os-color(gray);\n                    display: block;\n                    padding: 0.15rem 1rem;\n                }\n\n                a:focus,\n                a:hover {\n                    background-color: ui-color(default);\n                    color: text-color(normal);\n                }\n            }\n\n            &:hover:not(.dropdown) {\n                border-bottom: $menu-highlight-border;\n                margin-bottom: 0;\n            }\n        }\n\n        > :last-child {\n            margin-right: 0;\n            position: relative;\n\n            %dropdown-menu {\n                position: absolute;\n                right: -$normal-margin;\n            }\n        }\n    }\n}\n"]}